{
  "schema": {
    "additionalProperties": false,
    "properties": {
      "coordinates": {
        "description": "List of coordinates for which cost matrix should be calculated.",
        "items": {
          "additionalProperties": false,
          "properties": {
            "lng": {
              "description": "Longitude in decimal degrees.",
              "title": "Longitude",
              "type": "number"
            },
            "lat": {
              "description": "Latitude in decimal degrees.",
              "title": "Latitude",
              "type": "number"
            }
          },
          "required": [
            "lng",
            "lat"
          ],
          "title": "Coordinate",
          "type": "object"
        },
        "maxItems": 10000,
        "minItems": 2,
        "title": "Location Coordinates",
        "type": "array"
      },
      "return_cost_matrix_type": {
        "enum": [
          "distance",
          "duration",
          "both"
        ],
        "title": "ReturnCostMatrixType",
        "type": "string"
      },
      "vehicle_type": {
        "enum": [
          "bike",
          "car",
          "walk"
        ],
        "title": "VehicleType",
        "type": "string"
      },
      "curb": {
        "default": false,
        "description": "Set to true to consider vehicle driving direction and restricted curbside access at each location.",
        "title": "Curbside Access Restriction",
        "type": "boolean"
      }
    },
    "required": [
      "coordinates"
    ],
    "title": "CostMatrixInput",
    "type": "object"
  },
  "examples": {
    "CostMatrixBasicExample": {
      "value": {
        "coordinates": [
          {
            "lng": 127.0,
            "lat": 37.5
          },
          {
            "lng": 127.1,
            "lat": 37.6
          },
          {
            "lng": 127.2,
            "lat": 37.4
          },
          {
            "lng": 126.9,
            "lat": 37.7
          }
        ],
        "return_cost_matrix_type": "both"
      },
      "summary": "Generate distance and duration matrix from coordinates",
      "description": "Example showing how to generate distance and duration matrices from a list of coordinates."
    },
    "CostMatrixDistanceOnly": {
      "value": {
        "coordinates": [
          {
            "lng": 127.0,
            "lat": 37.5
          },
          {
            "lng": 127.1,
            "lat": 37.6
          },
          {
            "lng": 127.2,
            "lat": 37.4
          }
        ],
        "return_cost_matrix_type": "distance"
      },
      "summary": "Generate only distance matrix from coordinates",
      "description": "Example showing how to generate only distance matrix from coordinates."
    }
  },
  "_meta": {
    "source": "Omelet",
    "path": "/api/cost-matrix",
    "method": "POST"
  }
}
